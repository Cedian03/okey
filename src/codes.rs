//! QMK/TMK style keycodes for ease of configuration.

use crate::action::{Action, Key, Modifier};

pub const _______: Option<Action> = None;
pub const XXXXXXX: Option<Action> = Some(Action::NoAction);

macro_rules! define_keys {
    ($($name:ident => $code:ident,)*) => {
        $(
            pub const $name: Option<Action> = Some(Action::Key(Key::$code));
        )*
    };
}

define_keys! {
    KC_A => KeyboardA,
    KC_B => KeyboardB,
    KC_C => KeyboardC,
    KC_D => KeyboardD,
    KC_E => KeyboardE,
    KC_F => KeyboardF,
    KC_G => KeyboardG,
    KC_H => KeyboardH,
    KC_I => KeyboardI,
    KC_J => KeyboardJ,
    KC_K => KeyboardK,
    KC_L => KeyboardL,
    KC_M => KeyboardM,
    KC_N => KeyboardN,
    KC_O => KeyboardO,
    KC_P => KeyboardP,
    KC_Q => KeyboardQ,
    KC_R => KeyboardR,
    KC_S => KeyboardS,
    KC_T => KeyboardT,
    KC_U => KeyboardU,
    KC_V => KeyboardV,
    KC_W => KeyboardW,
    KC_X => KeyboardX,
    KC_Y => KeyboardY,
    KC_Z => KeyboardZ,
    KC_1 => Keyboard1,
    KC_2 => Keyboard2,
    KC_3 => Keyboard3,
    KC_4 => Keyboard4,
    KC_5 => Keyboard5,
    KC_6 => Keyboard6,
    KC_7 => Keyboard7,
    KC_8 => Keyboard8,
    KC_9 => Keyboard9,
    KC_0 => Keyboard0,
    KC_ENTER => Enter,
    KC_ESCAPE => Escape,
    KC_BSPACE => Backspace,
    KC_TAB => Tab,
    KC_SPACE => Space,
    KC_MINUS => Minus,
    KC_EQUAL => Equal,
    KC_LBRACKET => LeftBracket,
    KC_RBRACKET => RightBracket,
    KC_BSLASH => Backslash,
    KC_NONUS_HASH => NonUSHash,
    KC_SCOLON => Semicolon,
    KC_APOSTROPHE => Apostrophe,
    KC_GRAVE => Grave,
    KC_COMMA => Comma,
    KC_DOT => Dot,
    KC_SLASH => Slash,
    KC_CAPSLOCK => CapsLock,
    KC_F1 => F1,
    KC_F2 => F2,
    KC_F3 => F3,
    KC_F4 => F4,
    KC_F5 => F5,
    KC_F6 => F6,
    KC_F7 => F7,
    KC_F8 => F8,
    KC_F9 => F9,
    KC_F10 => F10,
    KC_F11 => F11,
    KC_F12 => F12,
    KC_PSCREEN => PrintScreen,
    KC_SCKLOCK => ScrollLock,
    KC_PAUSE => Pause,
    KC_INSERT => Insert,
    KC_HOME => Home,
    KC_PGUP => PageUp,
    KC_DELETE => Delete,
    KC_END => End,
    KC_PGDOWN => PageDown,
    KC_RIGHT => RightArrow,
    KC_LEFT => LeftArrow,
    KC_DOWN => DownArrow,
    KC_UP => UpArrow,
    KC_NUMLOCK => KeypadNumLock,
    KC_KP_SLASH => KeypadDivide,
    KC_KP_ASTERISK => KeypadMultiply,
    KC_KP_MINUS => KeypadSubtract,
    KC_KP_PLUS => KeypadAdd,
    KC_KP_ENTER => KeypadEnter,
    KC_KP_1 => Keypad1,
    KC_KP_2 => Keypad2,
    KC_KP_3 => Keypad3,
    KC_KP_4 => Keypad4,
    KC_KP_5 => Keypad5,
    KC_KP_6 => Keypad6,
    KC_KP_7 => Keypad7,
    KC_KP_8 => Keypad8,
    KC_KP_9 => Keypad9,
    KC_KP_0 => Keypad0,
    KC_KP_DOT => KeypadDot,
    KC_NONUS_BSLASH => NonUSBackslash,
    KC_APPLICATION => Application,
    KC_POWER => Power,
    KC_KP_EQUAL => KeypadEqual,
    KC_F13 => F13,
    KC_F14 => F14,
    KC_F15 => F15,
    KC_F16 => F16,
    KC_F17 => F17,
    KC_F18 => F18,
    KC_F19 => F19,
    KC_F20 => F20,
    KC_F21 => F21,
    KC_F22 => F22,
    KC_F23 => F23,
    KC_F24 => F24,
    KC_EXECUTE => Execute,
    KC_HELP => Help,
    KC_MENU => Menu,
    KC_SELECT => Select,
    KC_STOP => Stop,
    KC_AGAIN => Again,
    KC_UNDO => Undo,
    KC_CUT => Cut,
    KC_COPY => Copy,
    KC_PASTE => Paste,
    KC_FIND => Find,
    KC_MUTE => Mute,
    KC_VOLUP => VolumeUp,
    KC_VOLDOWN => VolumeDown,
    KC_LOCKING_CAPS => LockingCapsLock,
    KC_LOCKING_NUM => LockingNumLock,
    KC_LOCKING_SCROLL => LockingScrollLock,
    KC_KP_COMMA => KeypadComma,
    KC_KP_EQUAL_AS400 => KeypadEqualSign,
    KC_INT1 => International1,
    KC_INT2 => International2,
    KC_INT3 => International3,
    KC_INT4 => International4,
    KC_INT5 => International5,
    KC_INT6 => International6,
    KC_INT7 => International7,
    KC_INT8 => International8,
    KC_INT9 => International9,
    KC_LANG1 => Language1,
    KC_LANG2 => Language2,
    KC_LANG3 => Language3,
    KC_LANG4 => Language4,
    KC_LANG5 => Language5,
    KC_LANG6 => Language6,
    KC_LANG7 => Language7,
    KC_LANG8 => Language8,
    KC_LANG9 => Language9,
    KC_ALT_ERASE => AlternateErase,
    KC_SYSREQ => SysReqAttention,
    KC_CANCEL => Cancel,
    KC_CLEAR => Clear,
    KC_PRIOR => Prior,
    KC_RETURN => Return,
    KC_SEPARATOR => Separator,
    KC_OUT => Out,
    KC_OPER => Oper,
    KC_CLEAR_AGAIN => ClearAgain,
    KC_CRSEL => CrSelProps,
    KC_EXSEL => ExSel,
}

macro_rules! define_modifiers {
    ($($name:ident => $modifier:ident,)*) => {
        $(
            pub const $name: Option<Action> = Some(Action::Modifier(Modifier::$modifier));
        )*
    };
}

define_modifiers! {
    KC_LEFT_CONTROL => LeftControl,
    KC_LEFT_SHIFT => LeftShift,
    KC_LEFT_ALT => LeftAlt,
    KC_LEFT_GUI => LeftGUI,
    KC_RIGHT_CONTROL => RightControl,
    KC_RIGHT_SHIFT => RightShift,
    KC_RIGHT_ALT => RightAlt,
    KC_RIGHT_GUI => RightGUI,
}

#[allow(non_snake_case)]
pub const fn MT(layer: u8) -> Option<Action> {
    Some(Action::MomentaryLayer(layer))
}

#[allow(non_snake_case)]
pub const fn TG(layer: u8) -> Option<Action> {
    Some(Action::ToggleLayer(layer))
}
